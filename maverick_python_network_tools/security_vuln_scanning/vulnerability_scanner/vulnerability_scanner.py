"""
Vulnerability Scanner Framework
Developer: Ronald Baker

This script scans a target web application for common vulnerabilities:
- SQL Injection
- Cross-Site Scripting (XSS)
- Directory Traversal

Instructions:
1. Run the script from the terminal.
2. Enter the target URL to scan.
3. The script will perform tests for vulnerabilities and display the results.
4. Modify this script to extend functionality as needed.

Required Libraries:
- requests (Install with `pip install requests`)

Usage:
python3 vulnerability_scanner.py
"""

import requests

def test_sql_injection(target_url):
    """
    Tests the target URL for SQL Injection vulnerabilities.

    :param target_url: The target URL to test.
    """
    payload = "' OR '1'='1"
    print("\n[SQL Injection Test]")
    try:
        response = requests.get(target_url, params={"input": payload}, timeout=5)
        if "syntax" in response.text.lower() or "error" in response.text.lower():
            print(f"Potential SQL Injection vulnerability detected at: {target_url}")
        else:
            print("No SQL Injection vulnerability detected.")
    except Exception as e:
        print(f"Error testing for SQL Injection: {e}")

def test_xss(target_url):
    """
    Tests the target URL for Cross-Site Scripting (XSS) vulnerabilities.

    :param target_url: The target URL to test.
    """
    payload = "<script>alert('XSS');</script>"
    print("\n[Cross-Site Scripting (XSS) Test]")
    try:
        response = requests.get(target_url, params={"input": payload}, timeout=5)
        if payload in response.text:
            print(f"Potential XSS vulnerability detected at: {target_url}")
        else:
            print("No XSS vulnerability detected.")
    except Exception as e:
        print(f"Error testing for XSS: {e}")

def test_directory_traversal(target_url):
    """
    Tests the target URL for Directory Traversal vulnerabilities.

    :param target_url: The target URL to test.
    """
    payload = "../../../../etc/passwd"
    print("\n[Directory Traversal Test]")
    try:
        response = requests.get(target_url, params={"input": payload}, timeout=5)
        if "root:" in response.text:
            print(f"Potential Directory Traversal vulnerability detected at: {target_url}")
        else:
            print("No Directory Traversal vulnerability detected.")
    except Exception as e:
        print(f"Error testing for Directory Traversal: {e}")

if __name__ == "__main__":
    print("Welcome to the Vulnerability Scanner Framework.")
    print("Developer: Ronald Baker\n")

    # Input target
    target = input("Enter the target URL (e.g., http://example.com/test): ")

    # Run vulnerability tests
    test_sql_injection(target)
    test_xss(target)
    test_directory_traversal(target)

